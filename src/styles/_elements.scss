@import 'variables';
@import 'mixins';

html, body {
  height: 100%;
}

body {
  color: rgba(0,0,0,.87);
  // material sets .mat-typography font to 14px/20px, but this forces you to set line-height every time you change font-size
  // 14/20 is 1.42, so we'll override to 1.42 (same as boot3), then we can change font-size at will
  &.more-specific {
    //line-height: 1.42;
  }
}

*,
*::before,
*::after {
  box-sizing: border-box; // 1
  //outline: none;
}

i {
  text-decoration: none;
}

a {
  text-decoration: none;
  &:link, &:visited, &:hover, &:active {
    color: $color-link !important;
  }
}

// the css on an inline that contains block element (surely all these comps will contain block elements right) is suspect.
// the host "must be inline-block or block because of this. With our ViewEncapsulation.None element namespacing standard
// of host class = dkhost-element-selector, we can enforce this in one place, here. Be hard to override this level of specificity
// but I'll take the ease of application this brings.
*[class^="dkhost-"] {
  display: block;
}
